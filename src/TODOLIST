TODO: proper game over.
Done: level manager and handling waves of enemies and levels.
Done: Adding multiple types of enemies.
Done: Adding upgrades(shot upgrades and rocket upgrades)
Done: dying when hitting an enemy.
Done: not dying for a couple seconds after reviving from previous death.
Done: bomb killing all enemies and reduce health of bosses

Phase 3:
Done: break Data class to StaticData and DynamicData classes. First one contains transient fields of Data.
todo: handle screenSize related calculations(dependent on Toolkit.getDefa..) so that it is fixed in multi-player game with players having different screensized
    one possible fix, is to not have the game run on full screen and on a smaller window.

Done: shot cool down and time between shots in multi-player.
Done: move shootbomb mechanism from gamePanel to LE completely.(currently shoot bomb doesn't work in multi-player)
Done: player should be dynamic and score and other info's should be updated
todo: Enemy2s behaviour in multi-player.
Done: add serverWaiting panel and other multi player panels.
Done: pause menu handling
Done: single player pause menu broke:(
Done: Level manager seems to not work
PRIORITY3: DONE(kinda:)  todo: Exception handling.
Done: client death handling.
Done: observer
todo: Proper game over and game ending.

Done: pressedKeyNamePair can be a hash map.

*Done(single player Logic Engine still works with Shot fields): heat increment should be implemented in logic engine rather than in shot constructors.
*Done: collision handler code is ugly:) use ClientsDataOnServer to better implement it.
*Done: changing enemies health in multi-player depending on number of players.

Phase 4:
todo: add Database connection to single player.
todo: saving in multiPlayer(should it be disabled?)
todo: Loading an enemy class
todo: menu for adding enemy class
todo: adding new enemies of a new type using reflection and its Class to the enemy queue
todo: adding new enemies in multiplayer.(no need to send image and stuff to clients for now)
todo: creating new Boss class and new Enemy class to test reflection.



Miscellaneous:
todo: Saving mechanism doesn't load from where it is supposed to when a player resumes the game.