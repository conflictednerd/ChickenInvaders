Server Design:

Server -> listens for clients and create worker thread(A reader and a writer thread) for each of them when they are created. It also creates a ServerLogicEngine thread and starts it when signaled.
WorkerThread -> is an abstract class that has a Data field called serverData and has two kind of classes: Sender and Receiver.
Receiver -> A WorkerThread that listens to clients and update server data with info received from them. -> data includes -> isPaused, rocketLocation, pressedKeys, ...?
Sender -> A WorkerThread that sends the appropriate Data object for the respective client obtained from ServerData object periodically (and if not paused?).
ServerLogicEngine a kind of LogicEngine that works with server data and updates it periodically.

So each Server has a unique ServerData instance and passes it to SLE and WorkerThreads as they are created.
Each Sender creates and sends a Data object and each Receiver receives a line? of data.

Client Design:

When connected to server, GE runs as it does in the single player and two threads start working alongside it(instead of LE).
     One thread sends data to server periodically and another receives a data object from server and updates local Data instance by this data object.

All operations on data(including reading from it in GE) Should carefully be synchronized.


So when a client hits start as client and enters ip and port,
    1) A connection is made to the server
    2) GE and ClientSender, ClientReceiver are created.
    3) gamePanel is loaded.
    4) GE and workerThreads start.

And when a server player hits start as server and enters port,
    1) A Server starts listening to clients.
    2) A client is created with ip=localhost to run the game for the server player(Except that gamePanel doesn't get loaded yet.)
    3) A panel shows current connected clients and has a start game button.

When server player starts the game,
    0) clientWorkerThreads and SLE are created.
    1) gamePanel is loaded and GE starts.
    2) clientWorkerThreads start.
    3) ServerWorkerThreads start
*   4) isPaused is set to false in serverData.
    5) SLE starts.


ROCKET SHOULD BE STATIC_DATA.
PLAYER SHOULD BE DYNAMIC_DATA.